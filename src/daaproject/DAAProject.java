/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package daaproject;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.JOptionPane;

/**
 *
 * @author BSP
 */
public class DAAProject extends javax.swing.JFrame {

    /**
     * Creates new form DAAProject
     */
    public DAAProject() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Searching = new javax.swing.JPanel();
        SearchingHeader = new javax.swing.JLabel();
        SearchKeyFeild = new javax.swing.JTextField();
        SearchingKey = new javax.swing.JLabel();
        LinearSearchButton = new javax.swing.JButton();
        BinarySearchButton = new javax.swing.JButton();
        InterpolationSearchButton = new javax.swing.JButton();
        JumpSearchButton = new javax.swing.JButton();
        MainHeader = new javax.swing.JLabel();
        MyArray = new javax.swing.JPanel();
        MyArrayHeader = new javax.swing.JLabel();
        MyArrayScrollPane = new javax.swing.JScrollPane();
        ArrayTextArea = new javax.swing.JTextArea();
        ArraySizeLabel0 = new javax.swing.JLabel();
        ArraySizeLabel1 = new javax.swing.JLabel();
        Adding = new javax.swing.JPanel();
        AddingHeader = new javax.swing.JLabel();
        ArrayValueFeild = new javax.swing.JTextField();
        AddingValue = new javax.swing.JLabel();
        ArrayValueAddButton = new javax.swing.JButton();
        AddingIntRadio = new javax.swing.JRadioButton();
        AddingStrRadio = new javax.swing.JRadioButton();
        AddFibButton = new javax.swing.JButton();
        AddRandomButton = new javax.swing.JButton();
        Sorting = new javax.swing.JPanel();
        SortingHeader = new javax.swing.JLabel();
        MergeSortButton = new javax.swing.JButton();
        InsertionSortButton = new javax.swing.JButton();
        Status = new javax.swing.JPanel();
        StatusHeader = new javax.swing.JLabel();
        StatusLabel = new javax.swing.JLabel();
        myMenuBar = new javax.swing.JMenuBar();
        myMenu_Info = new javax.swing.JMenu();
        LinearSearchMenu = new javax.swing.JMenuItem();
        BinSearchMenu = new javax.swing.JMenuItem();
        JumpSearchMenu = new javax.swing.JMenuItem();
        InterpolationSearchMenu = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        myMenu_About = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DAA Project By Atib 16417");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 1000));
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Searching.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Searching.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SearchingHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        SearchingHeader.setText("Search values in array");
        Searching.add(SearchingHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 1, -1, -1));

        SearchKeyFeild.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        SearchKeyFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchKeyFeildActionPerformed(evt);
            }
        });
        SearchKeyFeild.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchKeyFeildKeyReleased(evt);
            }
        });
        Searching.add(SearchKeyFeild, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 39, 74, -1));

        SearchingKey.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        SearchingKey.setText("Key:");
        Searching.add(SearchingKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 45, -1, -1));

        LinearSearchButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LinearSearchButton.setText("Linear Search");
        LinearSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinearSearchButtonActionPerformed(evt);
            }
        });
        Searching.add(LinearSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 82, 139, -1));

        BinarySearchButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BinarySearchButton.setText("Binary Search");
        BinarySearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinarySearchButtonActionPerformed(evt);
            }
        });
        Searching.add(BinarySearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 127, 139, -1));

        InterpolationSearchButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        InterpolationSearchButton.setText("Interpolation");
        InterpolationSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterpolationSearchButtonActionPerformed(evt);
            }
        });
        Searching.add(InterpolationSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 139, -1));

        JumpSearchButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        JumpSearchButton.setText("Jump Search");
        JumpSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JumpSearchButtonActionPerformed(evt);
            }
        });
        Searching.add(JumpSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 170, 139, -1));

        getContentPane().add(Searching, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 270, 250));

        MainHeader.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        MainHeader.setText("DAA Searching and Sorting Project");
        getContentPane().add(MainHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        MyArray.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        MyArray.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MyArrayHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        MyArrayHeader.setText("Values in array");
        MyArray.add(MyArrayHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 13, -1, -1));

        ArrayTextArea.setEditable(false);
        ArrayTextArea.setColumns(20);
        ArrayTextArea.setRows(5);
        MyArrayScrollPane.setViewportView(ArrayTextArea);

        MyArray.add(MyArrayScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 48, 745, 77));

        ArraySizeLabel0.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ArraySizeLabel0.setText("Array Size:");
        MyArray.add(ArraySizeLabel0, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, -1, -1));

        ArraySizeLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        MyArray.add(ArraySizeLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, -1, -1));
        MyProg as = new MyProg();
        ArraySizeLabel1.setText(String.valueOf(as.array.size()));

        getContentPane().add(MyArray, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 780, 180));
        ArrayTextArea.setText("NO VALUES IN ARRAY");

        Adding.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AddingHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        AddingHeader.setText("Add values in array");

        ArrayValueFeild.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ArrayValueFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArrayValueFeildActionPerformed(evt);
            }
        });
        ArrayValueFeild.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ArrayValueFeildKeyReleased(evt);
            }
        });

        AddingValue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        AddingValue.setText("Value:");

        ArrayValueAddButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ArrayValueAddButton.setText("Add");
        ArrayValueAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArrayValueAddButtonActionPerformed(evt);
            }
        });

        AddingIntRadio.setText("Integer");
        AddingIntRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddingIntRadioActionPerformed(evt);
            }
        });

        AddingStrRadio.setText("Strings");
        AddingStrRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddingStrRadioActionPerformed(evt);
            }
        });

        AddFibButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        AddFibButton.setText("Add fibonacci series");
        AddFibButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFibButtonActionPerformed(evt);
            }
        });

        AddRandomButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        AddRandomButton.setText("Add Random 100");
        AddRandomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRandomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddingLayout = new javax.swing.GroupLayout(Adding);
        Adding.setLayout(AddingLayout);
        AddingLayout.setHorizontalGroup(
            AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddingLayout.createSequentialGroup()
                .addGroup(AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddingLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(AddingHeader))
                    .addGroup(AddingLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(AddingIntRadio)
                        .addGap(89, 89, 89)
                        .addComponent(AddingStrRadio))
                    .addGroup(AddingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AddingValue)
                        .addGap(18, 18, 18)
                        .addComponent(ArrayValueFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(ArrayValueAddButton))
                    .addGroup(AddingLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddFibButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddRandomButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(10, 10, 10))
        );
        AddingLayout.setVerticalGroup(
            AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddingLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(AddingHeader)
                .addGap(18, 18, 18)
                .addGroup(AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddingIntRadio)
                    .addComponent(AddingStrRadio))
                .addGap(18, 18, 18)
                .addGroup(AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddingLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(AddingValue))
                    .addComponent(ArrayValueFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ArrayValueAddButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddFibButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddRandomButton)
                .addContainerGap())
        );

        getContentPane().add(Adding, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 240, 250));
        AddingIntRadio.setSelected(true);

        Sorting.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Sorting.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SortingHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        SortingHeader.setText("Sort values in array");
        Sorting.add(SortingHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 22, -1, -1));

        MergeSortButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        MergeSortButton.setText("Merge Sort");
        MergeSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MergeSortButtonActionPerformed(evt);
            }
        });
        Sorting.add(MergeSortButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 72, 137, -1));

        InsertionSortButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        InsertionSortButton.setText("Insertion Sort");
        InsertionSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertionSortButtonActionPerformed(evt);
            }
        });
        Sorting.add(InsertionSortButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 121, -1, -1));

        getContentPane().add(Sorting, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 280, -1, 180));

        Status.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Status.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        StatusHeader.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        StatusHeader.setText("STATUS");
        Status.add(StatusHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 14, -1, -1));

        StatusLabel.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        Status.add(StatusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 52, 742, 42));

        getContentPane().add(Status, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 780, 110));

        myMenu_Info.setText("Info");

        LinearSearchMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        LinearSearchMenu.setText("Linear Search");
        LinearSearchMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinearSearchMenuActionPerformed(evt);
            }
        });
        myMenu_Info.add(LinearSearchMenu);

        BinSearchMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        BinSearchMenu.setText("Binary Search");
        BinSearchMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinSearchMenuActionPerformed(evt);
            }
        });
        myMenu_Info.add(BinSearchMenu);

        JumpSearchMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        JumpSearchMenu.setText("Jump Search");
        JumpSearchMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JumpSearchMenuActionPerformed(evt);
            }
        });
        myMenu_Info.add(JumpSearchMenu);

        InterpolationSearchMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        InterpolationSearchMenu.setText("Interpolation");
        InterpolationSearchMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterpolationSearchMenuActionPerformed(evt);
            }
        });
        myMenu_Info.add(InterpolationSearchMenu);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        jMenuItem1.setText("Insertion Sort");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        myMenu_Info.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Merge Sort");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        myMenu_Info.add(jMenuItem2);

        myMenuBar.add(myMenu_Info);

        myMenu_About.setText("About");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setText("Creator");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        myMenu_About.add(jMenuItem3);

        myMenuBar.add(myMenu_About);

        setJMenuBar(myMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public MyProg x = new MyProg();
    int numformatkey;
    private void ArrayValueFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArrayValueFeildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArrayValueFeildActionPerformed

    private void LinearSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinearSearchButtonActionPerformed
        // TODO add your handling code here:  
        if (SearchIsEmpty()){return;}
        int SearchVal = Integer.parseInt(SearchKeyFeild.getText());
        x.search('L', SearchVal);
    }//GEN-LAST:event_LinearSearchButtonActionPerformed

    private boolean SearchIsEmpty(){
        if (SearchKeyFeild.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Insert a value to search", "Searching Algorithms", 3);
        return true;
        }     
        return false;
    }
    private void InsertionSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertionSortButtonActionPerformed
        // TODO add your handling code here:
        ArrayTextArea.setText("");
        x.printInsertionSortExecutionTime();
        x.printArray();        
    }//GEN-LAST:event_InsertionSortButtonActionPerformed
    
    private void SearchKeyFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchKeyFeildActionPerformed
        // TODO add your handling code here:
        MyInfo z = new MyInfo();
        z.setVisible(true);
        z.TimeInfoWorst.setText("Big O (n)");
        z.SpaceInfo.setText("");
    }//GEN-LAST:event_SearchKeyFeildActionPerformed

    private void MergeSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MergeSortButtonActionPerformed
        // TODO add your handling code here:
        ArrayTextArea.setText("");
        x.printMergeSortExecutionTime();
        x.printArray();
    }//GEN-LAST:event_MergeSortButtonActionPerformed

    
    private void BinarySearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinarySearchButtonActionPerformed
        // TODO add your handling code here:
        if (SearchIsEmpty()){return;}
        int SearchVal = Integer.parseInt(SearchKeyFeild.getText());
        x.search('B', SearchVal);
    }//GEN-LAST:event_BinarySearchButtonActionPerformed

    private void InterpolationSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterpolationSearchButtonActionPerformed
        // TODO add your handling code here:
        if (SearchIsEmpty()){return;}        
        int SearchVal = Integer.parseInt(SearchKeyFeild.getText());
        x.search('I', SearchVal);        
    }//GEN-LAST:event_InterpolationSearchButtonActionPerformed

    private void ArrayValueFeildKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ArrayValueFeildKeyReleased
        // TODO add your handling code here:
    try {
        numformatkey = Integer.parseInt(ArrayValueFeild.getText());
    } catch (NumberFormatException nfe) {
        StatusLabel.setText("<html><font color='red'>Please input integer values only</font></html>");
        ArrayValueFeild.setText("");
    }        
    }//GEN-LAST:event_ArrayValueFeildKeyReleased

    private void SearchKeyFeildKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchKeyFeildKeyReleased
        // TODO add your handling code here:
    try {
        numformatkey = Integer.parseInt(SearchKeyFeild.getText());
    } catch (NumberFormatException nfe) {
        StatusLabel.setText("<html><font color='red'>Please input integer values only</font></html>");
        SearchKeyFeild.setText("");
    }        
    }//GEN-LAST:event_SearchKeyFeildKeyReleased

    private void ArrayValueAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArrayValueAddButtonActionPerformed
        // TODO add your handling code here:
        if(ArrayValueFeild.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter a value", "DAA Project",2);
            return;
        }
        x.add(Integer.parseInt(ArrayValueFeild.getText()));
        StatusLabel.setText("<html><font color='green'>Value successfully added to array</font></html>");
        ArraySizeLabel1.setText(String.valueOf(x.array.size()));        
        ArrayValueFeild.setText("");
        ArrayTextArea.setText("");
        x.printArray();        
    }//GEN-LAST:event_ArrayValueAddButtonActionPerformed

    private void AddingIntRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddingIntRadioActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_AddingIntRadioActionPerformed

    private void AddingStrRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddingStrRadioActionPerformed
        // TODO add your handling code here:
        AddingIntRadio.setSelected(false);
        JOptionPane.showMessageDialog(null, "Still working on strings", "Adding", 0);
        AddingStrRadio.setSelected(false);
        AddingIntRadio.setSelected(true);
    }//GEN-LAST:event_AddingStrRadioActionPerformed

    private void JumpSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JumpSearchButtonActionPerformed
        // TODO add your handling code here:
        if (SearchIsEmpty()){return;}        
        int SearchVal = Integer.parseInt(SearchKeyFeild.getText());
        x.search('J', SearchVal);         
    }//GEN-LAST:event_JumpSearchButtonActionPerformed

    private void AddFibButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFibButtonActionPerformed
        // TODO add your handling code here:
        x.addFibbo();
        StatusLabel.setText("<html><font color='green'>Fibonacci Series successfully added to array</font></html>");
        ArraySizeLabel1.setText(String.valueOf(x.array.size()));        
        ArrayTextArea.setText("");
        x.printArray(); 
    }//GEN-LAST:event_AddFibButtonActionPerformed
    
    private void JumpSearchMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JumpSearchMenuActionPerformed
        // TODO add your handling code here:
        x.myInfoMain('J');
    }//GEN-LAST:event_JumpSearchMenuActionPerformed

    private void LinearSearchMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinearSearchMenuActionPerformed
        x.myInfoMain('L');
    }//GEN-LAST:event_LinearSearchMenuActionPerformed

    private void BinSearchMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinSearchMenuActionPerformed
        // TODO add your handling code here:
        x.myInfoMain('B');
    }//GEN-LAST:event_BinSearchMenuActionPerformed
    
    private void InterpolationSearchMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterpolationSearchMenuActionPerformed
        x.myInfoMain('I');
    }//GEN-LAST:event_InterpolationSearchMenuActionPerformed

    private void AddRandomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRandomButtonActionPerformed
        // TODO add your handling code here:
        x.addRandom100();
        StatusLabel.setText("<html><font color='green'>Values added successfully added to array</font></html>");
        ArraySizeLabel1.setText(String.valueOf(x.array.size()));        
        ArrayTextArea.setText("");
        x.printArray();        
    }//GEN-LAST:event_AddRandomButtonActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        x.myInfoMain('M');        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        x.myInfoMain('S');        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        try {
          Desktop.getDesktop().browse(new URI("https://github.com/AteebNoOne/"));
        } catch (IOException | URISyntaxException ex) {
          ex.printStackTrace();
        }      
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DAAProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DAAProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DAAProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DAAProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DAAProject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFibButton;
    private javax.swing.JButton AddRandomButton;
    private javax.swing.JPanel Adding;
    private javax.swing.JLabel AddingHeader;
    public static javax.swing.JRadioButton AddingIntRadio;
    public static javax.swing.JRadioButton AddingStrRadio;
    private javax.swing.JLabel AddingValue;
    private javax.swing.JLabel ArraySizeLabel0;
    private javax.swing.JLabel ArraySizeLabel1;
    public static javax.swing.JTextArea ArrayTextArea;
    private javax.swing.JButton ArrayValueAddButton;
    private javax.swing.JTextField ArrayValueFeild;
    private javax.swing.JMenuItem BinSearchMenu;
    private javax.swing.JButton BinarySearchButton;
    private javax.swing.JButton InsertionSortButton;
    private javax.swing.JButton InterpolationSearchButton;
    private javax.swing.JMenuItem InterpolationSearchMenu;
    private javax.swing.JButton JumpSearchButton;
    private javax.swing.JMenuItem JumpSearchMenu;
    private javax.swing.JButton LinearSearchButton;
    private javax.swing.JMenuItem LinearSearchMenu;
    private javax.swing.JLabel MainHeader;
    private javax.swing.JButton MergeSortButton;
    private javax.swing.JPanel MyArray;
    private javax.swing.JLabel MyArrayHeader;
    private javax.swing.JScrollPane MyArrayScrollPane;
    private javax.swing.JTextField SearchKeyFeild;
    private javax.swing.JPanel Searching;
    private javax.swing.JLabel SearchingHeader;
    private javax.swing.JLabel SearchingKey;
    private javax.swing.JPanel Sorting;
    private javax.swing.JLabel SortingHeader;
    private javax.swing.JPanel Status;
    private javax.swing.JLabel StatusHeader;
    public static javax.swing.JLabel StatusLabel;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuBar myMenuBar;
    private javax.swing.JMenu myMenu_About;
    public static javax.swing.JMenu myMenu_Info;
    // End of variables declaration//GEN-END:variables
}
